c
1.0 == 1
1.class
1.0.class
(1.to_f / 1).is_a? Integer
1.to_f / 1
reduction.to_f / constraint
reduction / constraint
constraint
reduction
result
s
result
@factors
s
result
s
c
q
factorFinder.found.each
factorFinder.found
c
is_factor_of(i, num)
eval num
eval i
i
c
factorFinder.found
c
factorFinder.found
c
factorFinder.found
factorFinder
c
@found
num
c
result = num / i
num
i.value
ls
i;
i
found_valid_factor
i.class
i
num.class
num
